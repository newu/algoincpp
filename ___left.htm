<html>
<head>
<link rel="StyleSheet" href="___dtree.css" type="text/css" />
<script type="text/javascript" src="___dtree.js"></script>
</head>
<body>
<!-- Generated by CHM Decoder (http://www.gridinsoft.com) -->
<div class="dtree">
<p><a href="javascript: d.openAll();">open all</a> | <a href="javascript: d.closeAll();">close all</a></p>
<script type="text/javascript"><!--
d = new dTree("d");
d.add(0,-1,"0-201-35088-2.chm","");
d.add(1,0,"Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching, Third Edition","Toc.html");
d.add(2,1,"Copyright","copyrightpg.html");
d.add(3,1,"Preface","pref01.html");
d.add(4,1,"Part One: Fundamentals","part01.html");
d.add(5,4,"Chapter One. Introduction","ch01.html");
d.add(6,5,"1.1. Algorithms","ch01lev1sec1.html");
d.add(7,5,"1.2. A Sample Problem: Connectivity","ch01lev1sec2.html");
d.add(8,5,"1.3. Union–Find Algorithms","ch01lev1sec3.html");
d.add(9,5,"1.4. Perspective","ch01lev1sec4.html");
d.add(10,5,"1.5. Summary of Topics","ch01lev1sec5.html");
d.add(11,4,"Chapter Two. Principles of Algorithm Analysis","ch02.html");
d.add(12,11,"2.1. Implementation and Empirical Analysis","ch02lev1sec1.html");
d.add(13,11,"2.2. Analysis of Algorithms","ch02lev1sec2.html");
d.add(14,11,"2.3. Growth of Functions","ch02lev1sec3.html");
d.add(15,11,"2.4. Big-Oh Notation","ch02lev1sec4.html");
d.add(16,11,"2.5. Basic Recurrences","ch02lev1sec5.html");
d.add(17,11,"2.6. Examples of Algorithm Analysis","ch02lev1sec6.html");
d.add(18,11,"2.7. Guarantees, Predictions, and Limitations","ch02lev1sec7.html");
d.add(19,4,"References for Part One","ch02lev2sec1.html");
d.add(20,1,"Part Two: Data Structures","part02.html");
d.add(21,20,"Chapter Three. Elementary Data Structures","ch03.html");
d.add(22,21,"3.1. Building Blocks","ch03lev1sec1.html");
d.add(23,21,"3.2. Arrays","ch03lev1sec2.html");
d.add(24,21,"3.3. Linked Lists","ch03lev1sec3.html");
d.add(25,21,"3.4. Elementary List Processing","ch03lev1sec4.html");
d.add(26,21,"3.5. Memory Allocation for Lists","ch03lev1sec5.html");
d.add(27,21,"3.6. Strings","ch03lev1sec6.html");
d.add(28,21,"3.7. Compound Data Structures","ch03lev1sec7.html");
d.add(29,20,"Chapter Four. Abstract Data Types","ch04.html");
d.add(30,29,"4.1. Abstract Objects and Collections of Objects","ch04lev1sec1.html");
d.add(31,29,"4.10. Perspective","ch04lev1sec10.html");
d.add(32,29,"4.2. Pushdown Stack ADT","ch04lev1sec2.html");
d.add(33,29,"4.3. Examples of Stack ADT Clients","ch04lev1sec3.html");
d.add(34,29,"4.4. Stack ADT Implementations","ch04lev1sec4.html");
d.add(35,29,"4.5. Creation of a New ADT","ch04lev1sec5.html");
d.add(36,29,"4.6. FIFO Queues and Generalized Queues","ch04lev1sec6.html");
d.add(37,29,"4.7. Duplicate and Index Items","ch04lev1sec7.html");
d.add(38,29,"4.8. First-Class ADTs","ch04lev1sec8.html");
d.add(39,29,"4.9. Application-Based ADT Example","ch04lev1sec9.html");
d.add(40,20,"Chapter Five. Recursion and Trees","ch05.html");
d.add(41,40,"5.1. Recursive Algorithms","ch05lev1sec1.html");
d.add(42,40,"5.2. Divide and Conquer","ch05lev1sec2.html");
d.add(43,40,"5.3. Dynamic Programming","ch05lev1sec3.html");
d.add(44,40,"5.4. Trees","ch05lev1sec4.html");
d.add(45,40,"5.5. Mathematical Properties of Binary Trees","ch05lev1sec5.html");
d.add(46,40,"5.6. Tree Traversal","ch05lev1sec6.html");
d.add(47,40,"5.7. Recursive Binary-Tree Algorithms","ch05lev1sec7.html");
d.add(48,40,"5.8. Graph Traversal","ch05lev1sec8.html");
d.add(49,40,"5.9. Perspective","ch05lev1sec9.html");
d.add(50,20,"References for Part Two","ch05lev2sec1.html");
d.add(51,1,"Part Three: Sorting","part03.html");
d.add(52,51,"Chapter Six. Elementary Sorting Methods","ch06.html");
d.add(53,52,"6.1. Rules of the Game","ch06lev1sec1.html");
d.add(54,52,"6.10. Key-Indexed Counting","ch06lev1sec10.html");
d.add(55,52,"6.2. Selection Sort","ch06lev1sec2.html");
d.add(56,52,"6.3. Insertion Sort","ch06lev1sec3.html");
d.add(57,52,"6.4. Bubble Sort","ch06lev1sec4.html");
d.add(58,52,"6.5. Performance Characteristics of Elementary Sorts","ch06lev1sec5.html");
d.add(59,52,"6.6. Shellsort","ch06lev1sec6.html");
d.add(60,52,"6.7. Sorting of Other Types of Data","ch06lev1sec7.html");
d.add(61,52,"6.8. Index and Pointer Sorting","ch06lev1sec8.html");
d.add(62,52,"6.9. Sorting of Linked Lists","ch06lev1sec9.html");
d.add(63,51,"Chapter Seven. Quicksort","ch07.html");
d.add(64,63,"7.1. The Basic Algorithm","ch07lev1sec1.html");
d.add(65,63,"7.2. Performance Characteristics of Quicksort","ch07lev1sec2.html");
d.add(66,63,"7.3. Stack Size","ch07lev1sec3.html");
d.add(67,63,"7.4. Small Subfiles","ch07lev1sec4.html");
d.add(68,63,"7.5. Median-of-Three Partitioning","ch07lev1sec5.html");
d.add(69,63,"7.6. Duplicate Keys","ch07lev1sec6.html");
d.add(70,63,"7.7. Strings and Vectors","ch07lev1sec7.html");
d.add(71,63,"7.8. Selection","ch07lev1sec8.html");
d.add(72,51,"Chapter Eight. Merging and Mergesort","ch08.html");
d.add(73,72,"8.1. Two-Way Merging","ch08lev1sec1.html");
d.add(74,72,"8.2. Abstract In-Place Merge","ch08lev1sec2.html");
d.add(75,72,"8.3. Top-Down Mergesort","ch08lev1sec3.html");
d.add(76,72,"8.4. Improvements to the Basic Algorithm","ch08lev1sec4.html");
d.add(77,72,"8.5. Bottom-Up Mergesort","ch08lev1sec5.html");
d.add(78,72,"8.6. Performance Characteristics of Mergesort","ch08lev1sec6.html");
d.add(79,72,"8.7. Linked-List Implementations of Mergesort","ch08lev1sec7.html");
d.add(80,72,"8.8. Recursion Revisited","ch08lev1sec8.html");
d.add(81,51,"Chapter Nine. Priority Queues and Heapsort","ch09.html");
d.add(82,81,"9.1. Elementary Implementations","ch09lev1sec1.html");
d.add(83,81,"9.2. Heap Data Structure","ch09lev1sec2.html");
d.add(84,81,"9.3. Algorithms on Heaps","ch09lev1sec3.html");
d.add(85,81,"9.4. Heapsort","ch09lev1sec4.html");
d.add(86,81,"9.5. Priority-Queue ADT","ch09lev1sec5.html");
d.add(87,81,"9.6. Priority Queues for Index Items","ch09lev1sec6.html");
d.add(88,81,"9.7. Binomial Queues","ch09lev1sec7.html");
d.add(89,51,"Chapter Ten. Radix Sorting","ch10.html");
d.add(90,89,"10.1. Bits, Bytes, and Words","ch10lev1sec1.html");
d.add(91,89,"10.2. Binary Quicksort","ch10lev1sec2.html");
d.add(92,89,"10.3. MSD Radix Sort","ch10lev1sec3.html");
d.add(93,89,"10.4. Three-Way Radix Quicksort","ch10lev1sec4.html");
d.add(94,89,"10.5. LSD Radix Sort","ch10lev1sec5.html");
d.add(95,89,"10.6. Performance Characteristics of Radix Sorts","ch10lev1sec6.html");
d.add(96,89,"10.7. Sublinear-Time Sorts","ch10lev1sec7.html");
d.add(97,51,"Chapter Eleven. Special-Purpose Sorting Methods","ch11.html");
d.add(98,97,"11.1. Batcher's Odd–Even Mergesort","ch11lev1sec1.html");
d.add(99,97,"11.2. Sorting Networks","ch11lev1sec2.html");
d.add(100,97,"11.3. External Sorting","ch11lev1sec3.html");
d.add(101,97,"11.4. Sort–Merge Implementations","ch11lev1sec4.html");
d.add(102,97,"11.5. Parallel Sort–Merge","ch11lev1sec5.html");
d.add(103,51,"References for Part Three","ch11lev2sec1.html");
d.add(104,1,"Part Four: Searching","part04.html");
d.add(105,104,"Chapter Twelve. Symbol Tables and Binary Search Trees","ch12.html");
d.add(106,105,"12.1. Symbol-Table Abstract Data Type","ch12lev1sec1.html");
d.add(107,105,"12.2. Key-Indexed Search","ch12lev1sec2.html");
d.add(108,105,"12.3. Sequential Search","ch12lev1sec3.html");
d.add(109,105,"12.4. Binary Search","ch12lev1sec4.html");
d.add(110,105,"12.5. Binary Search Trees (BSTs)","ch12lev1sec5.html");
d.add(111,105,"12.6. Performance Characteristics of BSTs","ch12lev1sec6.html");
d.add(112,105,"12.7. Index Implementations with Symbol Tables","ch12lev1sec7.html");
d.add(113,105,"12.8. Insertion at the Root in BSTs","ch12lev1sec8.html");
d.add(114,105,"12.9. BST Implementations of Other ADT Functions","ch12lev1sec9.html");
d.add(115,104,"Chapter Thirteen. Balanced Trees","ch13.html");
d.add(116,115,"13.1. Randomized BSTs","ch13lev1sec1.html");
d.add(117,115,"13.2. Splay BSTs","ch13lev1sec2.html");
d.add(118,115,"13.3. Top-Down 2-3-4 Trees","ch13lev1sec3.html");
d.add(119,115,"13.4. Red–Black Trees","ch13lev1sec4.html");
d.add(120,115,"13.5. Skip Lists","ch13lev1sec5.html");
d.add(121,115,"13.6. Performance Characteristics","ch13lev1sec6.html");
d.add(122,104,"Chapter Fourteen. Hashing","ch14.html");
d.add(123,122,"14.1. Hash Functions","ch14lev1sec1.html");
d.add(124,122,"14.2. Separate Chaining","ch14lev1sec2.html");
d.add(125,122,"14.3. Linear Probing","ch14lev1sec3.html");
d.add(126,122,"14.4. Double Hashing","ch14lev1sec4.html");
d.add(127,122,"14.5. Dynamic Hash Tables","ch14lev1sec5.html");
d.add(128,122,"14.6. Perspective","ch14lev1sec6.html");
d.add(129,104,"Chapter Fifteen. Radix Search","ch15.html");
d.add(130,129,"15.1. Digital Search Trees","ch15lev1sec1.html");
d.add(131,129,"15.2. Tries","ch15lev1sec2.html");
d.add(132,129,"15.3. Patricia Tries","ch15lev1sec3.html");
d.add(133,129,"15.4. Multiway Tries and TSTs","ch15lev1sec4.html");
d.add(134,129,"15.5. Text-String–Index Algorithms","ch15lev1sec5.html");
d.add(135,104,"Chapter Sixteen. External Searching","ch16.html");
d.add(136,135,"16.1. Rules of the Game","ch16lev1sec1.html");
d.add(137,135,"16.2. Indexed Sequential Access","ch16lev1sec2.html");
d.add(138,135,"16.3. B Trees","ch16lev1sec3.html");
d.add(139,135,"16.4. Extendible Hashing","ch16lev1sec4.html");
d.add(140,135,"16.5. Perspective","ch16lev1sec5.html");
d.add(141,104,"References for Part Four","ch16lev2sec1.html");
d.add(142,1,"Index","index.html");
d.add(143,142,"A","index&amp;view=A.html");
d.add(144,142,"B","index&amp;view=B.html");
d.add(145,142,"C","index&amp;view=C.html");
d.add(146,142,"D","index&amp;view=D.html");
d.add(147,142,"E","index&amp;view=E.html");
d.add(148,142,"F","index&amp;view=F.html");
d.add(149,142,"G","index&amp;view=G.html");
d.add(150,142,"H","index&amp;view=H.html");
d.add(151,142,"I","index&amp;view=I.html");
d.add(152,142,"J","index&amp;view=J.html");
d.add(153,142,"K","index&amp;view=K.html");
d.add(154,142,"L","index&amp;view=L.html");
d.add(155,142,"M","index&amp;view=M.html");
d.add(156,142,"N","index&amp;view=N.html");
d.add(157,142,"O","index&amp;view=O.html");
d.add(158,142,"P","index&amp;view=P.html");
d.add(159,142,"Q","index&amp;view=Q.html");
d.add(160,142,"R","index&amp;view=R.html");
d.add(161,142,"S","index&amp;view=S.html");
d.add(162,142,"T","index&amp;view=T.html");
d.add(163,142,"U","index&amp;view=U.html");
d.add(164,142,"V","index&amp;view=V.html");
d.add(165,142,"W","index&amp;view=W.html");
d.add(166,142,"Y","index&amp;view=Y.html");

document.write(d);
//-->
</script>
</div>
<p \><hr size="1" \>
<font class="dtree">Generated by <a target="_blank" href="http://www.gridinsoft.com">CHM Decoder</a></font><br><br>
<font class="dtree">Need you translate this to other language?<br>Get <a target="_blank" href="http://www.chmeditor.com">CHM Editor</a> Now!</font>
</body>
</html>